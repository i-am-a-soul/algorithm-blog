import{_ as t,o as n,c as e,e as s}from"./app-nQkb7BpC.js";const a={},l=s(`<h1 id="位运算" tabindex="-1"><a class="header-anchor" href="#位运算" aria-hidden="true">#</a> 位运算</h1><h2 id="原码、反码和补码" tabindex="-1"><a class="header-anchor" href="#原码、反码和补码" aria-hidden="true">#</a> 原码、反码和补码</h2><table><thead><tr><th style="text-align:center;">二进制代码</th><th style="text-align:center;">无符号数值</th><th style="text-align:center;">原码值</th><th style="text-align:center;">反码值</th><th style="text-align:center;">补码值</th></tr></thead><tbody><tr><td style="text-align:center;">0000 0000</td><td style="text-align:center;">0</td><td style="text-align:center;">+0</td><td style="text-align:center;">+0</td><td style="text-align:center;">+0</td></tr><tr><td style="text-align:center;">0000 0001</td><td style="text-align:center;">1</td><td style="text-align:center;">+1</td><td style="text-align:center;">+1</td><td style="text-align:center;">+1</td></tr><tr><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td></tr><tr><td style="text-align:center;">0111 1110</td><td style="text-align:center;">126</td><td style="text-align:center;">+126</td><td style="text-align:center;">+126</td><td style="text-align:center;">+126</td></tr><tr><td style="text-align:center;">0111 1111</td><td style="text-align:center;">127</td><td style="text-align:center;">+127</td><td style="text-align:center;">+127</td><td style="text-align:center;">+127</td></tr><tr><td style="text-align:center;">1000 0000</td><td style="text-align:center;">128</td><td style="text-align:center;">-0</td><td style="text-align:center;">-127</td><td style="text-align:center;">-128</td></tr><tr><td style="text-align:center;">1000 0001</td><td style="text-align:center;">129</td><td style="text-align:center;">-1</td><td style="text-align:center;">-126</td><td style="text-align:center;">-127</td></tr><tr><td style="text-align:center;">1000 0010</td><td style="text-align:center;">130</td><td style="text-align:center;">-2</td><td style="text-align:center;">-125</td><td style="text-align:center;">-126</td></tr><tr><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td><td style="text-align:center;">...</td></tr><tr><td style="text-align:center;">1111 1101</td><td style="text-align:center;">253</td><td style="text-align:center;">-125</td><td style="text-align:center;">-2</td><td style="text-align:center;">-3</td></tr><tr><td style="text-align:center;">1111 1110</td><td style="text-align:center;">254</td><td style="text-align:center;">-126</td><td style="text-align:center;">-1</td><td style="text-align:center;">-2</td></tr><tr><td style="text-align:center;">1111 1111</td><td style="text-align:center;">255</td><td style="text-align:center;">-127</td><td style="text-align:center;">-0</td><td style="text-align:center;">-1</td></tr></tbody></table><h2 id="_0x3f3f3f3f与memset" tabindex="-1"><a class="header-anchor" href="#_0x3f3f3f3f与memset" aria-hidden="true">#</a> <code>0x3f3f3f3f</code>与<code>memset</code></h2><p>见《进阶指南》第<code>3</code>页。</p><h2 id="二进制状态压缩" tabindex="-1"><a class="header-anchor" href="#二进制状态压缩" aria-hidden="true">#</a> 二进制状态压缩</h2><p>见《进阶指南》第<code>6</code>页。</p><h2 id="成对变换" tabindex="-1"><a class="header-anchor" href="#成对变换" aria-hidden="true">#</a> 成对变换</h2><p>见《进阶指南》第<code>9</code>页。</p><h2 id="lowbit运算" tabindex="-1"><a class="header-anchor" href="#lowbit运算" aria-hidden="true">#</a> <code>lowbit</code>运算</h2><p>见《进阶指南》第<code>9</code>页。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">lowbit</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> x <span class="token operator">&amp;</span> <span class="token operator">-</span>x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="整数二进制表示下所有是1的位" tabindex="-1"><a class="header-anchor" href="#整数二进制表示下所有是1的位" aria-hidden="true">#</a> 整数二进制表示下所有是<code>1</code>的位</h2><p>见《进阶指南》第<code>10</code>页。</p><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token keyword">int</span> log_2<span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// log_2(2的i次幂) = i</span>
<span class="token keyword">int</span> <span class="token function">lowbit</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&amp;</span> <span class="token operator">-</span>x<span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">36</span><span class="token punctuation">;</span> <span class="token operator">++</span> i<span class="token punctuation">)</span> log_2<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1ll</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">int</span> x<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">&gt;&gt;</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> log_2<span class="token punctuation">[</span><span class="token function">lowbit</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">37</span><span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">;</span>
            x <span class="token operator">-=</span> <span class="token function">lowbit</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        cout <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15),c=[l];function p(o,d){return n(),e("div",null,c)}const r=t(a,[["render",p],["__file","模板-位运算.html.vue"]]);export{r as default};
