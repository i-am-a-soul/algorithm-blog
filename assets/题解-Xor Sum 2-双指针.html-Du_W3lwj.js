import{_ as m,r as p,o as k,c as _,a as t,b as n,d as s,w as a,e as o}from"./app-nQkb7BpC.js";const h={},f=t("h1",{id:"xor-sum-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#xor-sum-2","aria-hidden":"true"},"#"),n(),t("code",null,"Xor Sum 2")],-1),b={href:"https://vjudge.net/problem/AtCoder-arc098_b",target:"_blank",rel:"noopener noreferrer"},v=t("h2",{id:"分析",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分析","aria-hidden":"true"},"#"),n(" 分析")],-1),x=t("p",null,"异或是不进位的加法。",-1),g={class:"katex"},y={class:"katex-mathml"},w=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mbin">⊕</span><span class="mord mathit">b</span><span class="mrel">≤</span><span class="mord mathit">a</span><span class="mbin">+</span><span class="mord mathit">b</span></span></span>',1),j={class:"katex"},L={class:"katex-mathml"},N=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.69444em;"></span><span class="strut bottom" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="base textstyle uncramped"><span class="mord mathit">a</span><span class="mrel">&lt;</span><span class="mord mathit">b</span><span class="mrel">&lt;</span><span class="mord mathit">c</span></span></span>',1),S={class:"katex"},C={class:"katex-mathml"},V=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">b</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mclose">]</span></span></span>',1),X={class:"katex"},A={class:"katex-mathml"},B=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">a</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mclose">]</span></span></span>',1),E={class:"katex"},I={class:"katex-mathml"},T=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">a</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mclose">]</span></span></span>',1),q={class:"katex"},z={class:"katex-mathml"},D=o('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.75em;"></span><span class="strut bottom" style="height:1em;vertical-align:-0.25em;"></span><span class="base textstyle uncramped"><span class="mopen">[</span><span class="mord mathit">b</span><span class="mpunct">,</span><span class="mord mathit">c</span><span class="mclose">]</span></span></span>',1),F=o(`<h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">typedef</span> <span class="token keyword">long</span> <span class="token keyword">long</span> LL<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> N <span class="token operator">=</span> <span class="token number">200010</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> n<span class="token punctuation">,</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span> i<span class="token punctuation">)</span> cin <span class="token operator">&gt;&gt;</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

    LL res <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> xor_sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> xor_sum <span class="token operator">^=</span> a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> sum <span class="token operator">!=</span> xor_sum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sum <span class="token operator">-=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> xor_sum <span class="token operator">^=</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token operator">++</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        res <span class="token operator">+=</span> j <span class="token operator">-</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    cout <span class="token operator">&lt;&lt;</span> res <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function G(H,J){const d=p("ExternalLinkIcon"),l=p("mi"),e=p("mo"),c=p("mrow"),u=p("annotation"),i=p("semantics"),r=p("math");return k(),_("div",null,[f,t("p",null,[t("a",b,[n("AtCoder-Xor Sum 2"),s(d)])]),v,x,t("p",null,[n("性质："),t("span",g,[t("span",y,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("⊕")]),_:1}),s(l,null,{default:a(()=>[n("b")]),_:1}),s(e,null,{default:a(()=>[n("≤")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("+")]),_:1}),s(l,null,{default:a(()=>[n("b")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("a \\oplus b \\le a + b")]),_:1})]),_:1})]),_:1})]),w]),n("，当且仅当a \\And b=0时取等号。")]),t("p",null,[n("设"),t("span",j,[t("span",L,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,null,{default:a(()=>[n("<")]),_:1}),s(l,null,{default:a(()=>[n("b")]),_:1}),s(e,null,{default:a(()=>[n("<")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("a \\lt b \\lt c")]),_:1})]),_:1})]),_:1})]),N]),n("，")]),t("ul",null,[t("li",null,[n("如果"),t("span",S,[t("span",C,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("[")]),_:1}),s(l,null,{default:a(()=>[n("b")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("]")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("[b,c]")]),_:1})]),_:1})]),_:1})]),V]),n("不满足题意，那么"),t("span",X,[t("span",A,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("[")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("]")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("[a,c]")]),_:1})]),_:1})]),_:1})]),B]),n("也不满足题意；")]),t("li",null,[n("如果"),t("span",E,[t("span",I,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("[")]),_:1}),s(l,null,{default:a(()=>[n("a")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("]")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("[a,c]")]),_:1})]),_:1})]),_:1})]),T]),n("满足题意，那么"),t("span",q,[t("span",z,[s(r,null,{default:a(()=>[s(i,null,{default:a(()=>[s(c,null,{default:a(()=>[s(e,null,{default:a(()=>[n("[")]),_:1}),s(l,null,{default:a(()=>[n("b")]),_:1}),s(e,{separator:"true"},{default:a(()=>[n(",")]),_:1}),s(l,null,{default:a(()=>[n("c")]),_:1}),s(e,null,{default:a(()=>[n("]")]),_:1})]),_:1}),s(u,{encoding:"application/x-tex"},{default:a(()=>[n("[b,c]")]),_:1})]),_:1})]),_:1})]),D]),n("也满足题意。")])]),F])}const M=m(h,[["render",G],["__file","题解-Xor Sum 2-双指针.html.vue"]]);export{M as default};
