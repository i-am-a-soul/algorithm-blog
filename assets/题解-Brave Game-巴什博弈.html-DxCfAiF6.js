import{_ as e,r as t,o,c as p,a as n,b as a,d as c,e as r}from"./app-nQkb7BpC.js";const l={},i=n("h1",{id:"brave-game",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#brave-game","aria-hidden":"true"},"#"),a(),n("code",null,"Brave Game")],-1),d={href:"https://vjudge.net/problem/HDU-1846",target:"_blank",rel:"noopener noreferrer"},u=r(`<h2 id="分析" tabindex="-1"><a class="header-anchor" href="#分析" aria-hidden="true">#</a> 分析</h2><p>巴什博弈。</p><p>必胜策略：永远留给对手<code>m + 1</code>的整数倍个石子。</p><p>当<code>n = k * (m + 1) + r</code>时，我方（先手）取<code>r</code>个石子，如果对手取<code>a</code>个石子，那么我方取<code>(m + 1) - a</code>个石子，此时还有<code>(k - 1) * (m + 1)</code>个石子。当对手从<code>m + 1</code>个石子中取时，我方获胜。</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> T<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> T<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>T <span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&quot;first&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;second&quot;</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function k(m,v){const s=t("ExternalLinkIcon");return o(),p("div",null,[i,n("p",null,[n("a",d,[a("HDOJ-1846-Brave Game"),c(s)])]),u])}const _=e(l,[["render",k],["__file","题解-Brave Game-巴什博弈.html.vue"]]);export{_ as default};
