import{_,r as t,o as h,c as k,a as e,b as s,d as n,w as a,e as c}from"./app-nQkb7BpC.js";const f={},v=e("h1",{id:"浮点数二分",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#浮点数二分","aria-hidden":"true"},"#"),s(" 浮点数二分")],-1),b=e("h2",{id:"原理",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原理","aria-hidden":"true"},"#"),s(" 原理")],-1),x=e("p",null,[s("见《进阶指南》第"),e("code",null,"27"),s("页。")],-1),y=e("code",null,"k",-1),g=e("code",null,"eps",-1),w={class:"katex"},z={class:"katex-mathml"},N=c('<span class="katex-html" aria-hidden="true"><span class="strut" style="height:0.8879999999999999em;"></span><span class="strut bottom" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="base textstyle uncramped"><span class="mord mathrm">1</span><span class="mord"><span class="mord mathrm">0</span><span class="vlist"><span style="top:-0.363em;margin-right:0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord scriptstyle uncramped"><span class="mord">−</span><span class="mopen">(</span><span class="mord mathit" style="margin-right:0.03148em;">k</span><span class="mbin">+</span><span class="mord mathrm">2</span><span class="mclose">)</span></span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0em;">​</span></span>​</span></span></span></span></span>',1),V=c(`<h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l <span class="token operator">&gt;</span> eps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">double</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">check</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        r <span class="token operator">=</span> mid<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        l <span class="token operator">=</span> mid<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function B(C,E){const p=t("mn"),o=t("mo"),i=t("mi"),l=t("mrow"),r=t("msup"),d=t("annotation"),u=t("semantics"),m=t("math");return h(),k("div",null,[v,b,x,e("p",null,[s("一般来说，当需要保留"),y,s("位小数时，"),g,s("取"),e("span",w,[e("span",z,[n(m,null,{default:a(()=>[n(u,null,{default:a(()=>[n(l,null,{default:a(()=>[n(p,null,{default:a(()=>[s("1")]),_:1}),n(r,null,{default:a(()=>[n(p,null,{default:a(()=>[s("0")]),_:1}),n(l,null,{default:a(()=>[n(o,null,{default:a(()=>[s("−")]),_:1}),n(o,null,{default:a(()=>[s("(")]),_:1}),n(i,null,{default:a(()=>[s("k")]),_:1}),n(o,null,{default:a(()=>[s("+")]),_:1}),n(p,null,{default:a(()=>[s("2")]),_:1}),n(o,null,{default:a(()=>[s(")")]),_:1})]),_:1})]),_:1})]),_:1}),n(d,{encoding:"application/x-tex"},{default:a(()=>[s("10^{-(k+2)}")]),_:1})]),_:1})]),_:1})]),N]),s("。")]),V])}const T=_(f,[["render",B],["__file","模板-浮点数二分.html.vue"]]);export{T as default};
