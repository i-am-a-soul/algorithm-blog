import{_ as t,r as o,o as p,c,a as n,b as s,d as e,e as l}from"./app-nQkb7BpC.js";const i={},r=n("h1",{id:"双指针",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#双指针","aria-hidden":"true"},"#"),s(" 双指针")],-1),u=n("h2",{id:"原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#原理","aria-hidden":"true"},"#"),s(" 原理")],-1),d={href:"/solution/01.primary-algorithm/1.8%20%E5%8F%8C%E6%8C%87%E9%92%88/%E9%A2%98%E8%A7%A3-%E6%95%B0%E7%BB%84%E5%85%83%E7%B4%A0%E7%9A%84%E7%9B%AE%E6%A0%87%E5%92%8C-%E5%8F%8C%E6%8C%87%E9%92%88.html",target:"_blank",rel:"noopener noreferrer"},k={href:"/solution/01.primary-algorithm/1.8%20%E5%8F%8C%E6%8C%87%E9%92%88/%E9%A2%98%E8%A7%A3-%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C-%E5%8F%8C%E6%8C%87%E9%92%88.html",target:"_blank",rel:"noopener noreferrer"},m={href:"/solution/01.primary-algorithm/1.8%20%E5%8F%8C%E6%8C%87%E9%92%88/%E9%A2%98%E8%A7%A3-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E4%B8%8D%E9%87%8D%E5%A4%8D%E5%AD%90%E5%BA%8F%E5%88%97-%E5%8F%8C%E6%8C%87%E9%92%88.html",target:"_blank",rel:"noopener noreferrer"},E=l(`<h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token comment">// 一个序列 - 头尾指针</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> j <span class="token operator">=</span> n<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> i <span class="token operator">&amp;&amp;</span> 条件不成立<span class="token punctuation">)</span> <span class="token operator">--</span> j<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 条件成立</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// i 等于 j，此时条件可能成立也可能不成立</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 一个序列 - 头头指针</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> <span class="token operator">++</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// [i, j]</span>
    <span class="token comment">// add(j)</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> j <span class="token operator">&amp;&amp;</span> 条件不成立<span class="token punctuation">)</span> <span class="token operator">++</span> i<span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function v(h,_){const a=o("ExternalLinkIcon");return p(),c("div",null,[r,u,n("ul",null,[n("li",null,[s("两个序列，"),n("a",d,[s("例题（1）"),e(a)]),s("。")]),n("li",null,[s("一个序列： "),n("ul",null,[n("li",null,[s("头尾指针，"),n("a",k,[s("例题（2）"),e(a)]),s("。")]),n("li",null,[s("头头指针，"),n("a",m,[s("例题（3）"),e(a)]),s("。")])])])]),E])}const f=t(i,[["render",v],["__file","模板-双指针.html.vue"]]);export{f as default};
